"use strict";
// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Autoguard = exports.DomainRecord = exports.DomainRecordTXT = exports.DomainRecordGeneric = exports.DomainRecordBase = exports.DomainRecordStub = exports.DomainRecordStubTXT = exports.DomainRecordStubGeneric = exports.Domain = void 0;
const autoguard = require("@joelek/ts-autoguard/dist/lib-shared");
exports.Domain = autoguard.guards.Object.of({
    "id": autoguard.guards.Number,
    "name": autoguard.guards.String
});
exports.DomainRecordStubGeneric = autoguard.guards.Object.of({
    "nodeName": autoguard.guards.String,
    "recordType": autoguard.guards.String
});
exports.DomainRecordStubTXT = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.DomainRecordStubGeneric), autoguard.guards.Object.of({
    "recordType": autoguard.guards.StringLiteral.of("TXT"),
    "textData": autoguard.guards.String
}));
exports.DomainRecordStub = autoguard.guards.Union.of(autoguard.guards.Reference.of(() => exports.DomainRecordStubGeneric), autoguard.guards.Reference.of(() => exports.DomainRecordStubTXT));
exports.DomainRecordBase = autoguard.guards.Object.of({
    "id": autoguard.guards.Number,
    "domainId": autoguard.guards.Number
});
exports.DomainRecordGeneric = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.DomainRecordBase), autoguard.guards.Reference.of(() => exports.DomainRecordStubGeneric));
exports.DomainRecordTXT = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.DomainRecordBase), autoguard.guards.Reference.of(() => exports.DomainRecordStubTXT));
exports.DomainRecord = autoguard.guards.Union.of(autoguard.guards.Reference.of(() => exports.DomainRecordGeneric), autoguard.guards.Reference.of(() => exports.DomainRecordTXT));
var Autoguard;
(function (Autoguard) {
    Autoguard.Guards = {
        "Domain": autoguard.guards.Reference.of(() => exports.Domain),
        "DomainRecordStubGeneric": autoguard.guards.Reference.of(() => exports.DomainRecordStubGeneric),
        "DomainRecordStubTXT": autoguard.guards.Reference.of(() => exports.DomainRecordStubTXT),
        "DomainRecordStub": autoguard.guards.Reference.of(() => exports.DomainRecordStub),
        "DomainRecordBase": autoguard.guards.Reference.of(() => exports.DomainRecordBase),
        "DomainRecordGeneric": autoguard.guards.Reference.of(() => exports.DomainRecordGeneric),
        "DomainRecordTXT": autoguard.guards.Reference.of(() => exports.DomainRecordTXT),
        "DomainRecord": autoguard.guards.Reference.of(() => exports.DomainRecord)
    };
    Autoguard.Requests = {
        "listDomains": autoguard.guards.Object.of({
            "options": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Options), autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Union.of(autoguard.api.Binary, autoguard.guards.Undefined)
        }),
        "listDomainRecords": autoguard.guards.Object.of({
            "options": autoguard.guards.Intersection.of(autoguard.guards.Object.of({
                "domainid": autoguard.guards.Number
            }), autoguard.api.Options),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Union.of(autoguard.api.Binary, autoguard.guards.Undefined)
        }),
        "createDomainRecord": autoguard.guards.Object.of({
            "options": autoguard.guards.Intersection.of(autoguard.guards.Object.of({
                "domainid": autoguard.guards.Number
            }), autoguard.api.Options),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Reference.of(() => exports.DomainRecordStub)
        }),
        "updateDomainRecord": autoguard.guards.Object.of({
            "options": autoguard.guards.Intersection.of(autoguard.guards.Object.of({
                "domainid": autoguard.guards.Number,
                "recordid": autoguard.guards.Number
            }), autoguard.api.Options),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Reference.of(() => exports.DomainRecordStub)
        }),
        "deleteDomainRecord": autoguard.guards.Object.of({
            "options": autoguard.guards.Intersection.of(autoguard.guards.Object.of({
                "domainid": autoguard.guards.Number,
                "recordid": autoguard.guards.Number
            }), autoguard.api.Options),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Union.of(autoguard.api.Binary, autoguard.guards.Undefined)
        })
    };
    Autoguard.Responses = {
        "listDomains": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "domains": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.Domain))
            })
        }),
        "listDomainRecords": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "dnsRecords": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.DomainRecord))
            })
        }),
        "createDomainRecord": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Reference.of(() => exports.DomainRecord)
        }),
        "updateDomainRecord": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Reference.of(() => exports.DomainRecord)
        }),
        "deleteDomainRecord": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({})
        })
    };
})(Autoguard = exports.Autoguard || (exports.Autoguard = {}));
;
