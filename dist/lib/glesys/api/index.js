"use strict";
// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Autoguard = exports.DomainRecord = exports.DomainRecordType = exports.DomainRecordHost = exports.Domain = exports.RegistrarInfo = exports.DomainPrice = void 0;
const autoguard = require("@joelek/ts-autoguard/dist/lib-shared");
exports.DomainPrice = autoguard.guards.Object.of({
    "amount": autoguard.guards.Number,
    "currency": autoguard.guards.String,
    "years": autoguard.guards.Number
});
exports.RegistrarInfo = autoguard.guards.Object.of({
    "autorenew": autoguard.guards.String,
    "state": autoguard.guards.String,
    "statedescription": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "expire": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "tld": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "invoicenumber": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined)
});
exports.Domain = autoguard.guards.Object.of({
    "domainname": autoguard.guards.String,
    "available": autoguard.guards.Union.of(autoguard.guards.Boolean, autoguard.guards.Undefined),
    "createtime": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "displayname": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "expire": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
    "minimum": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
    "prices": autoguard.guards.Union.of(autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.DomainPrice)), autoguard.guards.Undefined),
    "primarynameserver": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "recordcount": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
    "refresh": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
    "registrarinfo": autoguard.guards.Union.of(autoguard.guards.Reference.of(() => exports.RegistrarInfo), autoguard.guards.Undefined),
    "responsibleperson": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
    "retry": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
    "ttl": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
    "usingglesysnameserver": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined)
});
exports.DomainRecordHost = autoguard.guards.Union.of(autoguard.guards.StringLiteral.of("@"), autoguard.guards.String);
exports.DomainRecordType = autoguard.guards.Union.of(autoguard.guards.StringLiteral.of("A"), autoguard.guards.StringLiteral.of("NS"), autoguard.guards.StringLiteral.of("MX"), autoguard.guards.StringLiteral.of("TXT"), autoguard.guards.String);
exports.DomainRecord = autoguard.guards.Object.of({
    "domainname": autoguard.guards.String,
    "data": autoguard.guards.String,
    "host": autoguard.guards.Reference.of(() => exports.DomainRecordHost),
    "recordid": autoguard.guards.Number,
    "ttl": autoguard.guards.Number,
    "type": autoguard.guards.Reference.of(() => exports.DomainRecordType)
});
var Autoguard;
(function (Autoguard) {
    Autoguard.Guards = {
        "DomainPrice": autoguard.guards.Reference.of(() => exports.DomainPrice),
        "RegistrarInfo": autoguard.guards.Reference.of(() => exports.RegistrarInfo),
        "Domain": autoguard.guards.Reference.of(() => exports.Domain),
        "DomainRecordHost": autoguard.guards.Reference.of(() => exports.DomainRecordHost),
        "DomainRecordType": autoguard.guards.Reference.of(() => exports.DomainRecordType),
        "DomainRecord": autoguard.guards.Reference.of(() => exports.DomainRecord)
    };
    Autoguard.Requests = {
        "listDomains": autoguard.guards.Object.of({
            "options": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Options), autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Union.of(autoguard.api.Binary, autoguard.guards.Undefined)
        }),
        "listDomainRecords": autoguard.guards.Object.of({
            "options": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Options), autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "domainname": autoguard.guards.String
            })
        }),
        "createDomainRecord": autoguard.guards.Object.of({
            "options": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Options), autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "domainname": autoguard.guards.String,
                "data": autoguard.guards.String,
                "host": autoguard.guards.Reference.of(() => exports.DomainRecordHost),
                "type": autoguard.guards.Reference.of(() => exports.DomainRecordType),
                "ttl": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined)
            })
        }),
        "updateDomainRecord": autoguard.guards.Object.of({
            "options": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Options), autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "recordid": autoguard.guards.Number,
                "data": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Undefined),
                "host": autoguard.guards.Union.of(autoguard.guards.Reference.of(() => exports.DomainRecordHost), autoguard.guards.Undefined),
                "type": autoguard.guards.Union.of(autoguard.guards.Reference.of(() => exports.DomainRecordType), autoguard.guards.Undefined),
                "ttl": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined)
            })
        }),
        "deleteDomainRecord": autoguard.guards.Object.of({
            "options": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Options), autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "recordid": autoguard.guards.Number
            })
        })
    };
    Autoguard.Responses = {
        "listDomains": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "response": autoguard.guards.Object.of({
                    "domains": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.Domain))
                })
            })
        }),
        "listDomainRecords": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "response": autoguard.guards.Object.of({
                    "records": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.DomainRecord))
                })
            })
        }),
        "createDomainRecord": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "response": autoguard.guards.Object.of({
                    "record": autoguard.guards.Reference.of(() => exports.DomainRecord)
                })
            })
        }),
        "updateDomainRecord": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "response": autoguard.guards.Object.of({
                    "record": autoguard.guards.Reference.of(() => exports.DomainRecord)
                })
            })
        }),
        "deleteDomainRecord": autoguard.guards.Object.of({
            "status": autoguard.guards.Union.of(autoguard.guards.Number, autoguard.guards.Undefined),
            "headers": autoguard.guards.Union.of(autoguard.guards.Intersection.of(autoguard.guards.Object.of({}), autoguard.api.Headers), autoguard.guards.Undefined),
            "payload": autoguard.guards.Object.of({
                "response": autoguard.guards.Object.of({})
            })
        })
    };
})(Autoguard = exports.Autoguard || (exports.Autoguard = {}));
;
