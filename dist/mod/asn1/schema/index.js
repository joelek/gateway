"use strict";
// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Autoguard = exports.UTCTime = exports.Date = exports.UTF8String = exports.Set = exports.Sequence = exports.OctetString = exports.ObjectIdentifier = exports.Null = exports.Integer = exports.BitString = exports.Node = exports.Type = exports.Form = exports.Kind = void 0;
const autoguard = require("@joelek/ts-autoguard/dist/lib-shared");
var Kind;
(function (Kind) {
    Kind[Kind["UNIVERSAL"] = 0] = "UNIVERSAL";
    Kind[Kind["APPLICATION"] = 1] = "APPLICATION";
    Kind[Kind["CONTEXT"] = 2] = "CONTEXT";
    Kind[Kind["PRIVATE"] = 3] = "PRIVATE";
})(Kind = exports.Kind || (exports.Kind = {}));
;
(function (Kind) {
    Kind.Key = autoguard.guards.Union.of(autoguard.guards.StringLiteral.of("UNIVERSAL"), autoguard.guards.StringLiteral.of("APPLICATION"), autoguard.guards.StringLiteral.of("CONTEXT"), autoguard.guards.StringLiteral.of("PRIVATE"));
    Kind.Value = autoguard.guards.Union.of(autoguard.guards.NumberLiteral.of(0), autoguard.guards.NumberLiteral.of(1), autoguard.guards.NumberLiteral.of(2), autoguard.guards.NumberLiteral.of(3));
    function keyFromValue(value) {
        return Kind.Key.as(Kind[Kind.Value.as(value)]);
    }
    Kind.keyFromValue = keyFromValue;
    ;
    function valueFromKey(key) {
        return Kind.Value.as(Kind[Kind.Key.as(key)]);
    }
    Kind.valueFromKey = valueFromKey;
    ;
})(Kind = exports.Kind || (exports.Kind = {}));
;
var Form;
(function (Form) {
    Form[Form["PRIMITIVE"] = 0] = "PRIMITIVE";
    Form[Form["CONSTRUCTED"] = 1] = "CONSTRUCTED";
})(Form = exports.Form || (exports.Form = {}));
;
(function (Form) {
    Form.Key = autoguard.guards.Union.of(autoguard.guards.StringLiteral.of("PRIMITIVE"), autoguard.guards.StringLiteral.of("CONSTRUCTED"));
    Form.Value = autoguard.guards.Union.of(autoguard.guards.NumberLiteral.of(0), autoguard.guards.NumberLiteral.of(1));
    function keyFromValue(value) {
        return Form.Key.as(Form[Form.Value.as(value)]);
    }
    Form.keyFromValue = keyFromValue;
    ;
    function valueFromKey(key) {
        return Form.Value.as(Form[Form.Key.as(key)]);
    }
    Form.valueFromKey = valueFromKey;
    ;
})(Form = exports.Form || (exports.Form = {}));
;
var Type;
(function (Type) {
    Type[Type["END_OF_CONTENT"] = 0] = "END_OF_CONTENT";
    Type[Type["BOOLEAN"] = 1] = "BOOLEAN";
    Type[Type["INTEGER"] = 2] = "INTEGER";
    Type[Type["BIT_STRING"] = 3] = "BIT_STRING";
    Type[Type["OCTET_STRING"] = 4] = "OCTET_STRING";
    Type[Type["NULL"] = 5] = "NULL";
    Type[Type["OBJECT_IDENTIFIER"] = 6] = "OBJECT_IDENTIFIER";
    Type[Type["OBJECT_DESCRIPTOR"] = 7] = "OBJECT_DESCRIPTOR";
    Type[Type["EXTERNAL"] = 8] = "EXTERNAL";
    Type[Type["REAL"] = 9] = "REAL";
    Type[Type["ENUMERATED"] = 10] = "ENUMERATED";
    Type[Type["EMBEDDED_PDV"] = 11] = "EMBEDDED_PDV";
    Type[Type["UTF8_STRING"] = 12] = "UTF8_STRING";
    Type[Type["RELATIVE_OID"] = 13] = "RELATIVE_OID";
    Type[Type["TIME"] = 14] = "TIME";
    Type[Type["0F_RESERVED"] = 15] = "0F_RESERVED";
    Type[Type["SEQUENCE"] = 16] = "SEQUENCE";
    Type[Type["SET"] = 17] = "SET";
    Type[Type["NUMERIC_STRING"] = 18] = "NUMERIC_STRING";
    Type[Type["PRINTABLE_STRING"] = 19] = "PRINTABLE_STRING";
    Type[Type["T61_STRING"] = 20] = "T61_STRING";
    Type[Type["VIDEOTEX_STRING"] = 21] = "VIDEOTEX_STRING";
    Type[Type["IA5_STRING"] = 22] = "IA5_STRING";
    Type[Type["UTC_TIME"] = 23] = "UTC_TIME";
    Type[Type["GENERALIZED_TIME"] = 24] = "GENERALIZED_TIME";
    Type[Type["GRAPHIC_STRING"] = 25] = "GRAPHIC_STRING";
    Type[Type["VISIBLE_STRING"] = 26] = "VISIBLE_STRING";
    Type[Type["GENERAL_STRING"] = 27] = "GENERAL_STRING";
    Type[Type["UNIVERSAL_STRING"] = 28] = "UNIVERSAL_STRING";
    Type[Type["CHARACTER_STRING"] = 29] = "CHARACTER_STRING";
    Type[Type["BMP_STRING"] = 30] = "BMP_STRING";
    Type[Type["DATE"] = 31] = "DATE";
    Type[Type["TIME_OF_DAY"] = 32] = "TIME_OF_DAY";
    Type[Type["DATE_TIME"] = 33] = "DATE_TIME";
    Type[Type["DURATION"] = 34] = "DURATION";
    Type[Type["OID_IRI"] = 35] = "OID_IRI";
    Type[Type["RELATIVE_OID_IRI"] = 36] = "RELATIVE_OID_IRI";
})(Type = exports.Type || (exports.Type = {}));
;
(function (Type) {
    Type.Key = autoguard.guards.Union.of(autoguard.guards.StringLiteral.of("END_OF_CONTENT"), autoguard.guards.StringLiteral.of("BOOLEAN"), autoguard.guards.StringLiteral.of("INTEGER"), autoguard.guards.StringLiteral.of("BIT_STRING"), autoguard.guards.StringLiteral.of("OCTET_STRING"), autoguard.guards.StringLiteral.of("NULL"), autoguard.guards.StringLiteral.of("OBJECT_IDENTIFIER"), autoguard.guards.StringLiteral.of("OBJECT_DESCRIPTOR"), autoguard.guards.StringLiteral.of("EXTERNAL"), autoguard.guards.StringLiteral.of("REAL"), autoguard.guards.StringLiteral.of("ENUMERATED"), autoguard.guards.StringLiteral.of("EMBEDDED_PDV"), autoguard.guards.StringLiteral.of("UTF8_STRING"), autoguard.guards.StringLiteral.of("RELATIVE_OID"), autoguard.guards.StringLiteral.of("TIME"), autoguard.guards.StringLiteral.of("0F_RESERVED"), autoguard.guards.StringLiteral.of("SEQUENCE"), autoguard.guards.StringLiteral.of("SET"), autoguard.guards.StringLiteral.of("NUMERIC_STRING"), autoguard.guards.StringLiteral.of("PRINTABLE_STRING"), autoguard.guards.StringLiteral.of("T61_STRING"), autoguard.guards.StringLiteral.of("VIDEOTEX_STRING"), autoguard.guards.StringLiteral.of("IA5_STRING"), autoguard.guards.StringLiteral.of("UTC_TIME"), autoguard.guards.StringLiteral.of("GENERALIZED_TIME"), autoguard.guards.StringLiteral.of("GRAPHIC_STRING"), autoguard.guards.StringLiteral.of("VISIBLE_STRING"), autoguard.guards.StringLiteral.of("GENERAL_STRING"), autoguard.guards.StringLiteral.of("UNIVERSAL_STRING"), autoguard.guards.StringLiteral.of("CHARACTER_STRING"), autoguard.guards.StringLiteral.of("BMP_STRING"), autoguard.guards.StringLiteral.of("DATE"), autoguard.guards.StringLiteral.of("TIME_OF_DAY"), autoguard.guards.StringLiteral.of("DATE_TIME"), autoguard.guards.StringLiteral.of("DURATION"), autoguard.guards.StringLiteral.of("OID_IRI"), autoguard.guards.StringLiteral.of("RELATIVE_OID_IRI"));
    Type.Value = autoguard.guards.Union.of(autoguard.guards.NumberLiteral.of(0), autoguard.guards.NumberLiteral.of(1), autoguard.guards.NumberLiteral.of(2), autoguard.guards.NumberLiteral.of(3), autoguard.guards.NumberLiteral.of(4), autoguard.guards.NumberLiteral.of(5), autoguard.guards.NumberLiteral.of(6), autoguard.guards.NumberLiteral.of(7), autoguard.guards.NumberLiteral.of(8), autoguard.guards.NumberLiteral.of(9), autoguard.guards.NumberLiteral.of(10), autoguard.guards.NumberLiteral.of(11), autoguard.guards.NumberLiteral.of(12), autoguard.guards.NumberLiteral.of(13), autoguard.guards.NumberLiteral.of(14), autoguard.guards.NumberLiteral.of(15), autoguard.guards.NumberLiteral.of(16), autoguard.guards.NumberLiteral.of(17), autoguard.guards.NumberLiteral.of(18), autoguard.guards.NumberLiteral.of(19), autoguard.guards.NumberLiteral.of(20), autoguard.guards.NumberLiteral.of(21), autoguard.guards.NumberLiteral.of(22), autoguard.guards.NumberLiteral.of(23), autoguard.guards.NumberLiteral.of(24), autoguard.guards.NumberLiteral.of(25), autoguard.guards.NumberLiteral.of(26), autoguard.guards.NumberLiteral.of(27), autoguard.guards.NumberLiteral.of(28), autoguard.guards.NumberLiteral.of(29), autoguard.guards.NumberLiteral.of(30), autoguard.guards.NumberLiteral.of(31), autoguard.guards.NumberLiteral.of(32), autoguard.guards.NumberLiteral.of(33), autoguard.guards.NumberLiteral.of(34), autoguard.guards.NumberLiteral.of(35), autoguard.guards.NumberLiteral.of(36));
    function keyFromValue(value) {
        return Type.Key.as(Type[Type.Value.as(value)]);
    }
    Type.keyFromValue = keyFromValue;
    ;
    function valueFromKey(key) {
        return Type.Value.as(Type[Type.Key.as(key)]);
    }
    Type.valueFromKey = valueFromKey;
    ;
})(Type = exports.Type || (exports.Type = {}));
;
exports.Node = autoguard.guards.Object.of({
    "kind": autoguard.guards.Reference.of(() => Kind.Key),
    "form": autoguard.guards.Reference.of(() => Form.Key),
    "type": autoguard.guards.Reference.of(() => Type.Key),
    "data": autoguard.guards.Union.of(autoguard.guards.String, autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.Node)))
}, {});
exports.BitString = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("BIT_STRING"),
    "data": autoguard.guards.String
}, {});
exports.Integer = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("INTEGER"),
    "data": autoguard.guards.String
}, {});
exports.Null = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("NULL"),
    "data": autoguard.guards.String
}, {});
exports.ObjectIdentifier = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("OBJECT_IDENTIFIER"),
    "data": autoguard.guards.String
}, {});
exports.OctetString = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("OCTET_STRING"),
    "data": autoguard.guards.String
}, {});
exports.Sequence = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("CONSTRUCTED"),
    "type": autoguard.guards.StringLiteral.of("SEQUENCE"),
    "data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.Node))
}, {});
exports.Set = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("CONSTRUCTED"),
    "type": autoguard.guards.StringLiteral.of("SET"),
    "data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.Node))
}, {});
exports.UTF8String = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("UTF8_STRING"),
    "data": autoguard.guards.String
}, {});
exports.Date = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("DATE"),
    "data": autoguard.guards.String
}, {});
exports.UTCTime = autoguard.guards.Object.of({
    "kind": autoguard.guards.StringLiteral.of("UNIVERSAL"),
    "form": autoguard.guards.StringLiteral.of("PRIMITIVE"),
    "type": autoguard.guards.StringLiteral.of("UTC_TIME"),
    "data": autoguard.guards.String
}, {});
var Autoguard;
(function (Autoguard) {
    Autoguard.Guards = {
        "Node": autoguard.guards.Reference.of(() => exports.Node),
        "BitString": autoguard.guards.Reference.of(() => exports.BitString),
        "Integer": autoguard.guards.Reference.of(() => exports.Integer),
        "Null": autoguard.guards.Reference.of(() => exports.Null),
        "ObjectIdentifier": autoguard.guards.Reference.of(() => exports.ObjectIdentifier),
        "OctetString": autoguard.guards.Reference.of(() => exports.OctetString),
        "Sequence": autoguard.guards.Reference.of(() => exports.Sequence),
        "Set": autoguard.guards.Reference.of(() => exports.Set),
        "UTF8String": autoguard.guards.Reference.of(() => exports.UTF8String),
        "Date": autoguard.guards.Reference.of(() => exports.Date),
        "UTCTime": autoguard.guards.Reference.of(() => exports.UTCTime)
    };
    Autoguard.Requests = {};
    Autoguard.Responses = {};
})(Autoguard = exports.Autoguard || (exports.Autoguard = {}));
;
