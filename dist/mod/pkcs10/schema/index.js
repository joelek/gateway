"use strict";
// This file was auto-generated by @joelek/autoguard. Edit at own risk.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Autoguard = exports.CertificationRequest = exports.CertificationRequestInfo = exports.ExtensionRequests = exports.Extensions = exports.Extension = exports.SubjectAlternativeNameExtension = exports.Extension2 = exports.Extension1 = exports.CRIAttribute = exports.Name = exports.RDNSequence = exports.RelativeDistinguishedName = exports.CommonName = exports.AttributeTypeAndValue = exports.ASN1Boolean = exports.ASN1UTF8String = exports.ASN1Sequence = exports.ASN1OctetString = exports.ASN1ObjectIdentifier = exports.ASN1Set = exports.ASN1Node = exports.ASN1Null = exports.ASN1Integer = exports.ASN1BitString = void 0;
const autoguard = require("@joelek/autoguard/dist/lib-shared");
const pkcs5_1 = require("../../pkcs5");
const asn1_1 = require("../../asn1");
const asn1_2 = require("../../asn1");
const asn1_3 = require("../../asn1");
const asn1_4 = require("../../asn1");
const asn1_5 = require("../../asn1");
const asn1_6 = require("../../asn1");
const asn1_7 = require("../../asn1");
const pkcs8_1 = require("../../pkcs8");
const asn1_8 = require("../../asn1");
const asn1_9 = require("../../asn1");
const asn1_10 = require("../../asn1");
exports.ASN1BitString = autoguard.guards.Reference.of(() => asn1_1.BitString);
exports.ASN1Integer = autoguard.guards.Reference.of(() => asn1_3.Integer);
exports.ASN1Null = autoguard.guards.Reference.of(() => asn1_5.Null);
exports.ASN1Node = autoguard.guards.Reference.of(() => asn1_4.Node);
exports.ASN1Set = autoguard.guards.Reference.of(() => asn1_9.Set);
exports.ASN1ObjectIdentifier = autoguard.guards.Reference.of(() => asn1_6.ObjectIdentifier);
exports.ASN1OctetString = autoguard.guards.Reference.of(() => asn1_7.OctetString);
exports.ASN1Sequence = autoguard.guards.Reference.of(() => asn1_8.Sequence);
exports.ASN1UTF8String = autoguard.guards.Reference.of(() => asn1_10.UTF8String);
exports.ASN1Boolean = autoguard.guards.Reference.of(() => asn1_2.Boolean);
exports.AttributeTypeAndValue = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Reference.of(() => exports.ASN1Node))
}, {}));
exports.CommonName = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.AttributeTypeAndValue), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Object.of({
        "data": autoguard.guards.StringLiteral.of("2.5.4.3")
    }, {})), autoguard.guards.Reference.of(() => exports.ASN1UTF8String))
}, {}));
exports.RelativeDistinguishedName = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Set), autoguard.guards.Object.of({
    "data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.AttributeTypeAndValue))
}, {}));
exports.RDNSequence = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.RelativeDistinguishedName))
}, {}));
exports.Name = autoguard.guards.Reference.of(() => exports.RDNSequence);
exports.CRIAttribute = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Reference.of(() => exports.ASN1Set))
}, {}));
exports.Extension1 = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Reference.of(() => exports.ASN1Boolean), autoguard.guards.Reference.of(() => exports.ASN1OctetString))
}, {}));
exports.Extension2 = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Reference.of(() => exports.ASN1OctetString))
}, {}));
exports.SubjectAlternativeNameExtension = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Object.of({
        "data": autoguard.guards.StringLiteral.of("2.5.29.17")
    }, {})), autoguard.guards.Reference.of(() => exports.ASN1OctetString))
}, {}));
exports.Extension = autoguard.guards.Union.of(autoguard.guards.Reference.of(() => exports.Extension1), autoguard.guards.Reference.of(() => exports.Extension2));
exports.Extensions = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.Extension))
}, {}));
exports.ExtensionRequests = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.CRIAttribute), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier), autoguard.guards.Object.of({
        "data": autoguard.guards.StringLiteral.of("1.2.840.113549.1.9.14")
    }, {})), autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Set), autoguard.guards.Object.of({
        "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.Extensions))
    }, {})))
}, {}));
exports.CertificationRequestInfo = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.ASN1Integer), autoguard.guards.Reference.of(() => exports.Name), autoguard.guards.Reference.of(() => pkcs8_1.PublicKeyInfo), autoguard.guards.Object.of({
        "kind": autoguard.guards.StringLiteral.of("CONTEXT"),
        "form": autoguard.guards.StringLiteral.of("CONSTRUCTED"),
        "type": autoguard.guards.StringLiteral.of("END_OF_CONTENT"),
        "data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => exports.CRIAttribute))
    }, {}))
}, {}));
exports.CertificationRequest = autoguard.guards.Intersection.of(autoguard.guards.Reference.of(() => exports.ASN1Sequence), autoguard.guards.Object.of({
    "data": autoguard.guards.Tuple.of(autoguard.guards.Reference.of(() => exports.CertificationRequestInfo), autoguard.guards.Reference.of(() => pkcs5_1.AlgorithmIdentifier), autoguard.guards.Reference.of(() => exports.ASN1BitString))
}, {}));
var Autoguard;
(function (Autoguard) {
    Autoguard.Guards = {
        "ASN1BitString": autoguard.guards.Reference.of(() => exports.ASN1BitString),
        "ASN1Integer": autoguard.guards.Reference.of(() => exports.ASN1Integer),
        "ASN1Null": autoguard.guards.Reference.of(() => exports.ASN1Null),
        "ASN1Node": autoguard.guards.Reference.of(() => exports.ASN1Node),
        "ASN1Set": autoguard.guards.Reference.of(() => exports.ASN1Set),
        "ASN1ObjectIdentifier": autoguard.guards.Reference.of(() => exports.ASN1ObjectIdentifier),
        "ASN1OctetString": autoguard.guards.Reference.of(() => exports.ASN1OctetString),
        "ASN1Sequence": autoguard.guards.Reference.of(() => exports.ASN1Sequence),
        "ASN1UTF8String": autoguard.guards.Reference.of(() => exports.ASN1UTF8String),
        "ASN1Boolean": autoguard.guards.Reference.of(() => exports.ASN1Boolean),
        "AttributeTypeAndValue": autoguard.guards.Reference.of(() => exports.AttributeTypeAndValue),
        "CommonName": autoguard.guards.Reference.of(() => exports.CommonName),
        "RelativeDistinguishedName": autoguard.guards.Reference.of(() => exports.RelativeDistinguishedName),
        "RDNSequence": autoguard.guards.Reference.of(() => exports.RDNSequence),
        "Name": autoguard.guards.Reference.of(() => exports.Name),
        "CRIAttribute": autoguard.guards.Reference.of(() => exports.CRIAttribute),
        "Extension1": autoguard.guards.Reference.of(() => exports.Extension1),
        "Extension2": autoguard.guards.Reference.of(() => exports.Extension2),
        "SubjectAlternativeNameExtension": autoguard.guards.Reference.of(() => exports.SubjectAlternativeNameExtension),
        "Extension": autoguard.guards.Reference.of(() => exports.Extension),
        "Extensions": autoguard.guards.Reference.of(() => exports.Extensions),
        "ExtensionRequests": autoguard.guards.Reference.of(() => exports.ExtensionRequests),
        "CertificationRequestInfo": autoguard.guards.Reference.of(() => exports.CertificationRequestInfo),
        "CertificationRequest": autoguard.guards.Reference.of(() => exports.CertificationRequest)
    };
    Autoguard.Requests = {};
    Autoguard.Responses = {};
})(Autoguard = exports.Autoguard || (exports.Autoguard = {}));
;
