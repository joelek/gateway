// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export const DynuApi: autoguard.serialization.MessageGuard<DynuApi> = autoguard.guards.Object.of({
	"name": autoguard.guards.StringLiteral.of("dynu"),
	"hostname": autoguard.guards.String,
	"key": autoguard.guards.String
}, {});

export type DynuApi = autoguard.guards.Object<{
	"name": autoguard.guards.StringLiteral<"dynu">,
	"hostname": autoguard.guards.String,
	"key": autoguard.guards.String
}, {}>;

export const GlesysApi: autoguard.serialization.MessageGuard<GlesysApi> = autoguard.guards.Object.of({
	"name": autoguard.guards.StringLiteral.of("glesys"),
	"hostname": autoguard.guards.String,
	"account": autoguard.guards.String,
	"key": autoguard.guards.String
}, {});

export type GlesysApi = autoguard.guards.Object<{
	"name": autoguard.guards.StringLiteral<"glesys">,
	"hostname": autoguard.guards.String,
	"account": autoguard.guards.String,
	"key": autoguard.guards.String
}, {}>;

export const Api: autoguard.serialization.MessageGuard<Api> = autoguard.guards.Union.of(
	autoguard.guards.Reference.of(() => DynuApi),
	autoguard.guards.Reference.of(() => GlesysApi)
);

export type Api = autoguard.guards.Union<[
	autoguard.guards.Reference<DynuApi>,
	autoguard.guards.Reference<GlesysApi>
]>;

export const Domain: autoguard.serialization.MessageGuard<Domain> = autoguard.guards.Object.of({
	"hostname": autoguard.guards.String,
	"api": autoguard.guards.Reference.of(() => Api)
}, {});

export type Domain = autoguard.guards.Object<{
	"hostname": autoguard.guards.String,
	"api": autoguard.guards.Reference<Api>
}, {}>;

export const Certificate: autoguard.serialization.MessageGuard<Certificate> = autoguard.guards.Object.of({}, {
	"domains": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Domain)),
	"root": autoguard.guards.String,
	"account": autoguard.guards.String,
	"key": autoguard.guards.String,
	"cert": autoguard.guards.String
});

export type Certificate = autoguard.guards.Object<{}, {
	"domains": autoguard.guards.Array<autoguard.guards.Reference<Domain>>,
	"root": autoguard.guards.String,
	"account": autoguard.guards.String,
	"key": autoguard.guards.String,
	"cert": autoguard.guards.String
}>;

export const Options: autoguard.serialization.MessageGuard<Options> = autoguard.guards.Object.of({}, {
	"certificates": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Certificate))
});

export type Options = autoguard.guards.Object<{}, {
	"certificates": autoguard.guards.Array<autoguard.guards.Reference<Certificate>>
}>;

export namespace Autoguard {
	export const Guards = {
		"DynuApi": autoguard.guards.Reference.of(() => DynuApi),
		"GlesysApi": autoguard.guards.Reference.of(() => GlesysApi),
		"Api": autoguard.guards.Reference.of(() => Api),
		"Domain": autoguard.guards.Reference.of(() => Domain),
		"Certificate": autoguard.guards.Reference.of(() => Certificate),
		"Options": autoguard.guards.Reference.of(() => Options)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
