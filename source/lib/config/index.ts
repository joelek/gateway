// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export const DynuApi = autoguard.guards.Object.of({
	"name": autoguard.guards.StringLiteral.of("dynu"),
	"hostname": autoguard.guards.String,
	"key": autoguard.guards.String
});

export type DynuApi = ReturnType<typeof DynuApi["as"]>;

export const GlesysApi = autoguard.guards.Object.of({
	"name": autoguard.guards.StringLiteral.of("glesys"),
	"hostname": autoguard.guards.String,
	"account": autoguard.guards.String,
	"key": autoguard.guards.String
});

export type GlesysApi = ReturnType<typeof GlesysApi["as"]>;

export const Api = autoguard.guards.Union.of(
	autoguard.guards.Reference.of(() => DynuApi),
	autoguard.guards.Reference.of(() => GlesysApi)
);

export type Api = ReturnType<typeof Api["as"]>;

export const Domain = autoguard.guards.Object.of({
	"hostname": autoguard.guards.String,
	"api": autoguard.guards.Reference.of(() => Api)
});

export type Domain = ReturnType<typeof Domain["as"]>;

export const Certificate = autoguard.guards.Object.of({
	"domains": autoguard.guards.Union.of(
		autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Domain)),
		autoguard.guards.Undefined
	),
	"root": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"account": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"key": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	),
	"cert": autoguard.guards.Union.of(
		autoguard.guards.String,
		autoguard.guards.Undefined
	)
});

export type Certificate = ReturnType<typeof Certificate["as"]>;

export const Options = autoguard.guards.Object.of({
	"certificates": autoguard.guards.Union.of(
		autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Certificate)),
		autoguard.guards.Undefined
	)
});

export type Options = ReturnType<typeof Options["as"]>;

export namespace Autoguard {
	export const Guards = {
		"DynuApi": autoguard.guards.Reference.of(() => DynuApi),
		"GlesysApi": autoguard.guards.Reference.of(() => GlesysApi),
		"Api": autoguard.guards.Reference.of(() => Api),
		"Domain": autoguard.guards.Reference.of(() => Domain),
		"Certificate": autoguard.guards.Reference.of(() => Certificate),
		"Options": autoguard.guards.Reference.of(() => Options)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
