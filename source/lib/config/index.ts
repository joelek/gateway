// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export const DynuCredentials: autoguard.serialization.MessageGuard<DynuCredentials> = autoguard.guards.Object.of({
	"name": autoguard.guards.StringLiteral.of("dynu"),
	"key": autoguard.guards.String
}, {});

export type DynuCredentials = autoguard.guards.Object<{
	"name": autoguard.guards.StringLiteral<"dynu">,
	"key": autoguard.guards.String
}, {}>;

export const GlesysCredentials: autoguard.serialization.MessageGuard<GlesysCredentials> = autoguard.guards.Object.of({
	"name": autoguard.guards.StringLiteral.of("glesys"),
	"username": autoguard.guards.String,
	"password": autoguard.guards.String
}, {});

export type GlesysCredentials = autoguard.guards.Object<{
	"name": autoguard.guards.StringLiteral<"glesys">,
	"username": autoguard.guards.String,
	"password": autoguard.guards.String
}, {}>;

export const Credentials: autoguard.serialization.MessageGuard<Credentials> = autoguard.guards.Union.of(
	autoguard.guards.Reference.of(() => DynuCredentials),
	autoguard.guards.Reference.of(() => GlesysCredentials)
);

export type Credentials = autoguard.guards.Union<[
	autoguard.guards.Reference<DynuCredentials>,
	autoguard.guards.Reference<GlesysCredentials>
]>;

export const Provider: autoguard.serialization.MessageGuard<Provider> = autoguard.guards.Object.of({
	"domains": autoguard.guards.Array.of(autoguard.guards.String),
	"credentials": autoguard.guards.Reference.of(() => Credentials)
}, {});

export type Provider = autoguard.guards.Object<{
	"domains": autoguard.guards.Array<autoguard.guards.String>,
	"credentials": autoguard.guards.Reference<Credentials>
}, {}>;

export const Certificate: autoguard.serialization.MessageGuard<Certificate> = autoguard.guards.Object.of({
	"domains": autoguard.guards.Array.of(autoguard.guards.String),
	"root": autoguard.guards.String
}, {
	"account": autoguard.guards.String,
	"key": autoguard.guards.String,
	"cert": autoguard.guards.String
});

export type Certificate = autoguard.guards.Object<{
	"domains": autoguard.guards.Array<autoguard.guards.String>,
	"root": autoguard.guards.String
}, {
	"account": autoguard.guards.String,
	"key": autoguard.guards.String,
	"cert": autoguard.guards.String
}>;

export const Options: autoguard.serialization.MessageGuard<Options> = autoguard.guards.Object.of({}, {
	"providers": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Provider)),
	"certificates": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => Certificate))
});

export type Options = autoguard.guards.Object<{}, {
	"providers": autoguard.guards.Array<autoguard.guards.Reference<Provider>>,
	"certificates": autoguard.guards.Array<autoguard.guards.Reference<Certificate>>
}>;

export namespace Autoguard {
	export const Guards = {
		"DynuCredentials": autoguard.guards.Reference.of(() => DynuCredentials),
		"GlesysCredentials": autoguard.guards.Reference.of(() => GlesysCredentials),
		"Credentials": autoguard.guards.Reference.of(() => Credentials),
		"Provider": autoguard.guards.Reference.of(() => Provider),
		"Certificate": autoguard.guards.Reference.of(() => Certificate),
		"Options": autoguard.guards.Reference.of(() => Options)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
