// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";

export const PrivateKey = autoguard.guards.Tuple.of(
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			}),
			autoguard.guards.Object.of({
				"data": autoguard.guards.String
			})
		)
	})
);

export type PrivateKey = ReturnType<typeof PrivateKey["as"]>;

export namespace Autoguard {
	export const Guards = {
		"PrivateKey": autoguard.guards.Reference.of(() => PrivateKey)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
