// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";
import { AlgorithmIdentifier } from "../../pkcs5";
import { BitString } from "../../asn1";
import { Integer } from "../../asn1";
import { Null } from "../../asn1";
import { ObjectIdentifier } from "../../asn1";
import { OctetString } from "../../asn1";
import { Sequence } from "../../asn1";

export const ASN1BitString: autoguard.serialization.MessageGuard<ASN1BitString> = autoguard.guards.Reference.of(() => BitString);

export type ASN1BitString = autoguard.guards.Reference<BitString>;

export const ASN1Integer: autoguard.serialization.MessageGuard<ASN1Integer> = autoguard.guards.Reference.of(() => Integer);

export type ASN1Integer = autoguard.guards.Reference<Integer>;

export const ASN1Null: autoguard.serialization.MessageGuard<ASN1Null> = autoguard.guards.Reference.of(() => Null);

export type ASN1Null = autoguard.guards.Reference<Null>;

export const ASN1ObjectIdentifier: autoguard.serialization.MessageGuard<ASN1ObjectIdentifier> = autoguard.guards.Reference.of(() => ObjectIdentifier);

export type ASN1ObjectIdentifier = autoguard.guards.Reference<ObjectIdentifier>;

export const ASN1OctetString: autoguard.serialization.MessageGuard<ASN1OctetString> = autoguard.guards.Reference.of(() => OctetString);

export type ASN1OctetString = autoguard.guards.Reference<OctetString>;

export const ASN1Sequence: autoguard.serialization.MessageGuard<ASN1Sequence> = autoguard.guards.Reference.of(() => Sequence);

export type ASN1Sequence = autoguard.guards.Reference<Sequence>;

export const PKCS5AlgorithmIdentifier: autoguard.serialization.MessageGuard<PKCS5AlgorithmIdentifier> = autoguard.guards.Reference.of(() => AlgorithmIdentifier);

export type PKCS5AlgorithmIdentifier = autoguard.guards.Reference<AlgorithmIdentifier>;

export const PublicKeyInfo: autoguard.serialization.MessageGuard<PublicKeyInfo> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASN1Sequence),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => PKCS5AlgorithmIdentifier),
			autoguard.guards.Reference.of(() => ASN1BitString)
		)
	}, {})
);

export type PublicKeyInfo = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASN1Sequence>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<PKCS5AlgorithmIdentifier>,
			autoguard.guards.Reference<ASN1BitString>
		]>
	}, {}>
]>;

export const PrivateKeyInfo: autoguard.serialization.MessageGuard<PrivateKeyInfo> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASN1Sequence),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ASN1Integer),
			autoguard.guards.Reference.of(() => PKCS5AlgorithmIdentifier),
			autoguard.guards.Reference.of(() => ASN1OctetString)
		)
	}, {})
);

export type PrivateKeyInfo = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASN1Sequence>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ASN1Integer>,
			autoguard.guards.Reference<PKCS5AlgorithmIdentifier>,
			autoguard.guards.Reference<ASN1OctetString>
		]>
	}, {}>
]>;

export const ECCurvePrime256v1: autoguard.serialization.MessageGuard<ECCurvePrime256v1> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASN1ObjectIdentifier),
	autoguard.guards.Object.of({
		"data": autoguard.guards.StringLiteral.of("1.2.840.10045.3.1.7")
	}, {})
);

export type ECCurvePrime256v1 = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASN1ObjectIdentifier>,
	autoguard.guards.Object<{
		"data": autoguard.guards.StringLiteral<"1.2.840.10045.3.1.7">
	}, {}>
]>;

export const ECCurveAnsip384r1: autoguard.serialization.MessageGuard<ECCurveAnsip384r1> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASN1ObjectIdentifier),
	autoguard.guards.Object.of({
		"data": autoguard.guards.StringLiteral.of("1.3.132.0.34")
	}, {})
);

export type ECCurveAnsip384r1 = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASN1ObjectIdentifier>,
	autoguard.guards.Object<{
		"data": autoguard.guards.StringLiteral<"1.3.132.0.34">
	}, {}>
]>;

export const ECCurveAnsip521r1: autoguard.serialization.MessageGuard<ECCurveAnsip521r1> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASN1ObjectIdentifier),
	autoguard.guards.Object.of({
		"data": autoguard.guards.StringLiteral.of("1.3.132.0.35")
	}, {})
);

export type ECCurveAnsip521r1 = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASN1ObjectIdentifier>,
	autoguard.guards.Object<{
		"data": autoguard.guards.StringLiteral<"1.3.132.0.35">
	}, {}>
]>;

export const ECCurve: autoguard.serialization.MessageGuard<ECCurve> = autoguard.guards.Union.of(
	autoguard.guards.Reference.of(() => ECCurvePrime256v1),
	autoguard.guards.Reference.of(() => ECCurveAnsip384r1),
	autoguard.guards.Reference.of(() => ECCurveAnsip521r1)
);

export type ECCurve = autoguard.guards.Union<[
	autoguard.guards.Reference<ECCurvePrime256v1>,
	autoguard.guards.Reference<ECCurveAnsip384r1>,
	autoguard.guards.Reference<ECCurveAnsip521r1>
]>;

export const ECIdentifier: autoguard.serialization.MessageGuard<ECIdentifier> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => PKCS5AlgorithmIdentifier),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => ASN1ObjectIdentifier),
				autoguard.guards.Object.of({
					"data": autoguard.guards.StringLiteral.of("1.2.840.10045.2.1")
				}, {})
			),
			autoguard.guards.Reference.of(() => ECCurve)
		)
	}, {})
);

export type ECIdentifier = autoguard.guards.Intersection<[
	autoguard.guards.Reference<PKCS5AlgorithmIdentifier>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Intersection<[
				autoguard.guards.Reference<ASN1ObjectIdentifier>,
				autoguard.guards.Object<{
					"data": autoguard.guards.StringLiteral<"1.2.840.10045.2.1">
				}, {}>
			]>,
			autoguard.guards.Reference<ECCurve>
		]>
	}, {}>
]>;

export const ECPublicKey: autoguard.serialization.MessageGuard<ECPublicKey> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => PublicKeyInfo),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ECIdentifier),
			autoguard.guards.Reference.of(() => ASN1BitString)
		)
	}, {})
);

export type ECPublicKey = autoguard.guards.Intersection<[
	autoguard.guards.Reference<PublicKeyInfo>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ECIdentifier>,
			autoguard.guards.Reference<ASN1BitString>
		]>
	}, {}>
]>;

export const ECPrivateKey: autoguard.serialization.MessageGuard<ECPrivateKey> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => PrivateKeyInfo),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ASN1Integer),
			autoguard.guards.Reference.of(() => ECIdentifier),
			autoguard.guards.Reference.of(() => ASN1OctetString)
		)
	}, {})
);

export type ECPrivateKey = autoguard.guards.Intersection<[
	autoguard.guards.Reference<PrivateKeyInfo>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ASN1Integer>,
			autoguard.guards.Reference<ECIdentifier>,
			autoguard.guards.Reference<ASN1OctetString>
		]>
	}, {}>
]>;

export const RSAIdentifier: autoguard.serialization.MessageGuard<RSAIdentifier> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => PKCS5AlgorithmIdentifier),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Intersection.of(
				autoguard.guards.Reference.of(() => ASN1ObjectIdentifier),
				autoguard.guards.Object.of({
					"data": autoguard.guards.StringLiteral.of("1.2.840.113549.1.1.1")
				}, {})
			),
			autoguard.guards.Reference.of(() => ASN1Null)
		)
	}, {})
);

export type RSAIdentifier = autoguard.guards.Intersection<[
	autoguard.guards.Reference<PKCS5AlgorithmIdentifier>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Intersection<[
				autoguard.guards.Reference<ASN1ObjectIdentifier>,
				autoguard.guards.Object<{
					"data": autoguard.guards.StringLiteral<"1.2.840.113549.1.1.1">
				}, {}>
			]>,
			autoguard.guards.Reference<ASN1Null>
		]>
	}, {}>
]>;

export const RSAPublicKey: autoguard.serialization.MessageGuard<RSAPublicKey> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => PublicKeyInfo),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => RSAIdentifier),
			autoguard.guards.Reference.of(() => ASN1BitString)
		)
	}, {})
);

export type RSAPublicKey = autoguard.guards.Intersection<[
	autoguard.guards.Reference<PublicKeyInfo>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<RSAIdentifier>,
			autoguard.guards.Reference<ASN1BitString>
		]>
	}, {}>
]>;

export const RSAPrivateKey: autoguard.serialization.MessageGuard<RSAPrivateKey> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => PrivateKeyInfo),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ASN1Integer),
			autoguard.guards.Reference.of(() => RSAIdentifier),
			autoguard.guards.Reference.of(() => ASN1OctetString)
		)
	}, {})
);

export type RSAPrivateKey = autoguard.guards.Intersection<[
	autoguard.guards.Reference<PrivateKeyInfo>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ASN1Integer>,
			autoguard.guards.Reference<RSAIdentifier>,
			autoguard.guards.Reference<ASN1OctetString>
		]>
	}, {}>
]>;

export namespace Autoguard {
	export const Guards = {
		"ASN1BitString": autoguard.guards.Reference.of(() => ASN1BitString),
		"ASN1Integer": autoguard.guards.Reference.of(() => ASN1Integer),
		"ASN1Null": autoguard.guards.Reference.of(() => ASN1Null),
		"ASN1ObjectIdentifier": autoguard.guards.Reference.of(() => ASN1ObjectIdentifier),
		"ASN1OctetString": autoguard.guards.Reference.of(() => ASN1OctetString),
		"ASN1Sequence": autoguard.guards.Reference.of(() => ASN1Sequence),
		"PKCS5AlgorithmIdentifier": autoguard.guards.Reference.of(() => PKCS5AlgorithmIdentifier),
		"PublicKeyInfo": autoguard.guards.Reference.of(() => PublicKeyInfo),
		"PrivateKeyInfo": autoguard.guards.Reference.of(() => PrivateKeyInfo),
		"ECCurvePrime256v1": autoguard.guards.Reference.of(() => ECCurvePrime256v1),
		"ECCurveAnsip384r1": autoguard.guards.Reference.of(() => ECCurveAnsip384r1),
		"ECCurveAnsip521r1": autoguard.guards.Reference.of(() => ECCurveAnsip521r1),
		"ECCurve": autoguard.guards.Reference.of(() => ECCurve),
		"ECIdentifier": autoguard.guards.Reference.of(() => ECIdentifier),
		"ECPublicKey": autoguard.guards.Reference.of(() => ECPublicKey),
		"ECPrivateKey": autoguard.guards.Reference.of(() => ECPrivateKey),
		"RSAIdentifier": autoguard.guards.Reference.of(() => RSAIdentifier),
		"RSAPublicKey": autoguard.guards.Reference.of(() => RSAPublicKey),
		"RSAPrivateKey": autoguard.guards.Reference.of(() => RSAPrivateKey)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
