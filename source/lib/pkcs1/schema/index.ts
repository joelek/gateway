// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

import * as autoguard from "@joelek/ts-autoguard/dist/lib-shared";
import { Integer } from "../../asno";
import { Sequence } from "../../asno";

export const ASNOInteger: autoguard.serialization.MessageGuard<ASNOInteger> = autoguard.guards.Reference.of(() => Integer);

export type ASNOInteger = autoguard.guards.Reference<Integer>;

export const ASNOSequence: autoguard.serialization.MessageGuard<ASNOSequence> = autoguard.guards.Reference.of(() => Sequence);

export type ASNOSequence = autoguard.guards.Reference<Sequence>;

export const OtherPrimeInfo: autoguard.serialization.MessageGuard<OtherPrimeInfo> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASNOSequence),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger)
		)
	}, {})
);

export type OtherPrimeInfo = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASNOSequence>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>
		]>
	}, {}>
]>;

export const OtherPrimeInfos: autoguard.serialization.MessageGuard<OtherPrimeInfos> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASNOSequence),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Array.of(autoguard.guards.Reference.of(() => OtherPrimeInfo))
	}, {})
);

export type OtherPrimeInfos = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASNOSequence>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Array<autoguard.guards.Reference<OtherPrimeInfo>>
	}, {}>
]>;

export const RSAPublicKey: autoguard.serialization.MessageGuard<RSAPublicKey> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASNOSequence),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger)
		)
	}, {})
);

export type RSAPublicKey = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASNOSequence>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>
		]>
	}, {}>
]>;

export const RSAPrivateKey: autoguard.serialization.MessageGuard<RSAPrivateKey> = autoguard.guards.Intersection.of(
	autoguard.guards.Reference.of(() => ASNOSequence),
	autoguard.guards.Object.of({
		"data": autoguard.guards.Tuple.of(
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Reference.of(() => ASNOInteger),
			autoguard.guards.Union.of(
				autoguard.guards.Reference.of(() => OtherPrimeInfos),
				autoguard.guards.Undefined
			)
		)
	}, {})
);

export type RSAPrivateKey = autoguard.guards.Intersection<[
	autoguard.guards.Reference<ASNOSequence>,
	autoguard.guards.Object<{
		"data": autoguard.guards.Tuple<[
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Reference<ASNOInteger>,
			autoguard.guards.Union<[
				autoguard.guards.Reference<OtherPrimeInfos>,
				autoguard.guards.Undefined
			]>
		]>
	}, {}>
]>;

export namespace Autoguard {
	export const Guards = {
		"ASNOInteger": autoguard.guards.Reference.of(() => ASNOInteger),
		"ASNOSequence": autoguard.guards.Reference.of(() => ASNOSequence),
		"OtherPrimeInfo": autoguard.guards.Reference.of(() => OtherPrimeInfo),
		"OtherPrimeInfos": autoguard.guards.Reference.of(() => OtherPrimeInfos),
		"RSAPublicKey": autoguard.guards.Reference.of(() => RSAPublicKey),
		"RSAPrivateKey": autoguard.guards.Reference.of(() => RSAPrivateKey)
	};

	export type Guards = { [A in keyof typeof Guards]: ReturnType<typeof Guards[A]["as"]>; };

	export const Requests = {};

	export type Requests = { [A in keyof typeof Requests]: ReturnType<typeof Requests[A]["as"]>; };

	export const Responses = {};

	export type Responses = { [A in keyof typeof Responses]: ReturnType<typeof Responses[A]["as"]>; };
};
